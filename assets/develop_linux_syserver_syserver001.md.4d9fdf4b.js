import{_ as s,o as a,c as n,V as l}from"./chunks/framework.a215caf7.js";const h=JSON.parse('{"title":"SSH 免密登录","description":"","frontmatter":{},"headers":[],"relativePath":"develop/linux/syserver/syserver001.md","filePath":"develop/linux/syserver/syserver001.md","lastUpdated":1700906201000}'),o={name:"develop/linux/syserver/syserver001.md"},p=l(`<h1 id="ssh-免密登录" tabindex="-1">SSH 免密登录 <a class="header-anchor" href="#ssh-免密登录" aria-label="Permalink to &quot;SSH 免密登录&quot;">​</a></h1><h2 id="_1-配置-sshd-config" tabindex="-1">1.配置 sshd_config <a class="header-anchor" href="#_1-配置-sshd-config" aria-label="Permalink to &quot;1.配置 sshd_config&quot;">​</a></h2><p>服务端开启免密登录配置, 配置文件位置: <code>/etc/ssh/sshd_config</code>, 开启如下配置, 修改完之后之执行 <code>systemctl restart sshd</code> 重启服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 是否允许 root 远程登录</span></span>
<span class="line"><span style="color:#61AFEF;">PermitRootLogin</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 密码登录是否打开</span></span>
<span class="line"><span style="color:#61AFEF;">PasswordAuthentication</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 开启公钥认证</span></span>
<span class="line"><span style="color:#61AFEF;">RSAAuthentication</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">yes</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 这个参数可能没有</span></span>
<span class="line"><span style="color:#61AFEF;">PubkeyAuthentication</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 存放登录用户公钥的文件位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 位置就是登录用户名的家目录下的 .ssh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># root 就是 /root/.ssh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># jor 就是 /home/jor/.ssh</span></span>
<span class="line"><span style="color:#61AFEF;">AuthorizedKeysFile</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.ssh/authorized_keys</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 设置 ssh 连接心跳频率</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># ClientAliveInterval: 指定了服务器端向客户端请求响应的时间间隔, 默认是0, 不发送请求</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># ClientAliveCountMax: 指定了服务器发出请求后客户端没有响应的次数达到一定值, 就会自动断开</span></span>
<span class="line"><span style="color:#61AFEF;">ClientAliveInterval</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">60</span></span>
<span class="line"><span style="color:#61AFEF;">ClientAliveCountMax</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">7200000</span></span></code></pre></div><h2 id="_2-生成密钥" tabindex="-1">2.生成密钥 <a class="header-anchor" href="#_2-生成密钥" aria-label="Permalink to &quot;2.生成密钥&quot;">​</a></h2><p>用户端生成公钥私钥, 并复制到服务器配置文件中, 免密配置成功</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">ssh-keygen</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-t</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">rsa</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-C</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;commit&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ssh-copy-id</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-i</span><span style="color:#ABB2BF;"> (-o </span><span style="color:#98C379;">HostKeyAlgorithms=+ssh-rsa</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-o</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">PubkeyAcceptedKeyTypes=+ssh-rsa</span><span style="color:#ABB2BF;">) ~/.ssh/id_rsa.pub 服务器用户名@服务器地址</span></span></code></pre></div><h2 id="_3-配置别名-可选" tabindex="-1">3.配置别名(可选) <a class="header-anchor" href="#_3-配置别名-可选" aria-label="Permalink to &quot;3.配置别名(可选)&quot;">​</a></h2><p>可配置别名, 方便登录, <strong>如果使用的协议不是 ssh-rsa 则需配置该文件, 指定 IdentityFile, 否则免密登录不生效</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 登录的服务器别名 ssh examp 就可以了</span></span>
<span class="line"><span style="color:#61AFEF;">Host</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">examp</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">HostName</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">233.233</span><span style="color:#98C379;">.233.233</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 要登录的服务器ip</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Port</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">22</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">User</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">root</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 登录名</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">IdentityFile</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">~/.ssh/id_rsa</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 你的私钥路径</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;"># 服务器版本低于 8.8p1 时添加</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">HostKeyAlgorithms</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">+ssh-rsa</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">PubkeyAcceptedKeyTypes</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">+ssh-rsa</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">ps:</p><p>对于版本 &gt;= 8.8p1 的 openssh, ssh 客户端默认禁用了 ssh-rsa 算法, 但是服务器端未升级 openssh 只支持 ssh-rsa, 当无法升级远程服务器的 openssh 版本或修改配置使用更安全的算法时, 可在连接或配置别名的时候指定算法, 保证远程连接成功</p></div>`,11),e=[p];function t(c,r,i,y,B,F){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{h as __pageData,d as default};
