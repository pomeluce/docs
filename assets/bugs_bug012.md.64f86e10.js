import{_ as s,o as a,c as n,V as l}from"./chunks/framework.a215caf7.js";const _=JSON.parse('{"title":"@Value 注解 static 属性无效","description":"","frontmatter":{},"headers":[],"relativePath":"bugs/bug012.md","filePath":"bugs/bug012.md","lastUpdated":1689440421000}'),o={name:"bugs/bug012.md"},p=l(`<h1 id="value-注解-static-属性无效" tabindex="-1">@Value 注解 static 属性无效 <a class="header-anchor" href="#value-注解-static-属性无效" aria-label="Permalink to &quot;@Value 注解 static 属性无效&quot;">​</a></h1><ol><li>错误信息: <span style="color:red;">xxx is null</span></li><li>解决方案: 使用 set 方式注入, 将类使用 component 注入到 spring 容器中</li></ol><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">JwtUtils</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> TOKEN_ENCRYPT_KEY</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Value</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;\${token.key}&quot;</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">private</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> setTokenEncryptKey</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">tokenEncryptKey</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">JwtUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">TOKEN_ENCRYPT_KEY</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> tokenEncryptKey;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div>`,3),t=[p];function e(c,r,y,i,B,C){return a(),n("div",null,t)}const u=s(o,[["render",e]]);export{_ as __pageData,u as default};
